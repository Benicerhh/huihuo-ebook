{"remainingRequest":"E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\src\\components\\Ebook\\EbookReader.vue?vue&type=style&index=0&id=7f2e5320&lang=scss&rel=stylesheet%2Fscss&scoped=true&","dependencies":[{"path":"E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\src\\components\\Ebook\\EbookReader.vue","mtime":1588930847435},{"path":"E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCkBpbXBvcnQgIi4uLy4uL2Fzc2V0cy9zdHlsZXMvZ2xvYmFsIjsNCg0KLmVib29rLXJlYWRlciB7DQogIHdpZHRoOiAxMDAlOw0KICBoZWlnaHQ6IDEwMCU7DQogIG92ZXJmbG93OiBoaWRkZW47DQogIC5lYm9vay1yZWFkZXItbWFzayB7DQogICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgIHotaW5kZXg6IDEwMDsNCiAgICB0b3A6IDA7DQogICAgbGVmdDogMDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBoZWlnaHQ6IDEwMCU7DQogIH0NCn0NCg=="},{"version":3,"sources":["EbookReader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6RA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EbookReader.vue","sourceRoot":"src/components/Ebook","sourcesContent":["<template>\r\n  <div class=\"ebook-reader\">\r\n    <div\r\n      class=\"ebook-reader-mask\"\r\n      @touchmove=\"move\"\r\n      @touchend=\"moveEnd\"\r\n      @mousedown.left=\"onMouseEnter\"\r\n      @mousemove.left=\"onMouseMove\"\r\n      @mouseup.left=\"onMouseEnd\"\r\n      @click=\"onMaskClick\"\r\n    ></div>\r\n    <div id=\"read\" @click=\"toggleTitleAndMenu\"></div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport Epub from \"epubjs\";\r\nimport { ebookMixin } from \"../../utils/mixin\";\r\nimport {\r\n  getFontFamily,\r\n  saveFontFamily,\r\n  getFontSize,\r\n  saveFontSize,\r\n  getTheme,\r\n  saveTheme,\r\n  getLocation\r\n} from \"../../utils/localStorage\";\r\nimport { getLocalForage } from \"../../utils/localForage\";\r\nglobal.ePub = Epub;\r\nexport default {\r\n  mixins: [ebookMixin],\r\n  methods: {\r\n    move(e) {\r\n      let offsetY = 0;\r\n      if (this.firstOffsetY) {\r\n        offsetY = e.changedTouches[0].clientY - this.firstOffsetY;\r\n        this.setOffsetY(offsetY);\r\n      } else {\r\n        this.firstOffsetY = e.changedTouches[0].clientY;\r\n      }\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    },\r\n    moveEnd(e) {\r\n      this.setOffsetY(0);\r\n      this.firstOffsetY = 0;\r\n    },\r\n    onMouseEnter(e) {\r\n      this.mouseMove = 1;\r\n      this.mouseStartTime = e.timeStamp;\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    },\r\n    onMouseMove(e) {\r\n      if (this.mouseMove === 1) {\r\n        this.mouseMove = 2;\r\n      } else if (this.mouseMove === 2) {\r\n        let offsetY = 0;\r\n        if (this.firstOffsetY) {\r\n          offsetY = e.clientY - this.firstOffsetY;\r\n          this.setOffsetY(offsetY);\r\n        } else {\r\n          this.firstOffsetY = e.clientY;\r\n        }\r\n      }\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    },\r\n    onMouseEnd(e) {\r\n      if (this.mouseMove === 2) {\r\n        this.setOffsetY(0);\r\n        this.firstOffsetY = 0;\r\n        this.mouseMove = 3;\r\n      }\r\n      this.mouseEndTime = e.timeStamp;\r\n      const time = this.mouseEndTime - this.mouseStartTime;\r\n      if (time < 200) {\r\n        this.mouseMove = 1;\r\n      }\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    },\r\n    onMaskClick(e) {\r\n      const offsetX = e.offsetX;\r\n      const width = window.innerWidth;\r\n      if (offsetX > 0 && offsetX < width * 0.3) {\r\n        this.prevPage();\r\n      } else if (offsetX > 0 && offsetX > width * 0.7) {\r\n        this.nextPage();\r\n      } else {\r\n        this.toggleTitleAndMenu();\r\n      }\r\n    },\r\n    prevPage() {\r\n      //调用Rendition的prev方法返回上一页\r\n      if (this.rendition) {\r\n        this.rendition.prev().then(() => {\r\n          this.refreshLocation();\r\n        });\r\n      }\r\n      this.hideTitleAndMenu();\r\n    },\r\n    nextPage() {\r\n      //调用Rendition的next方法返回上一页\r\n      if (this.rendition) {\r\n        this.rendition.next().then(() => {\r\n          this.refreshLocation();\r\n        });\r\n      }\r\n      this.hideTitleAndMenu();\r\n    },\r\n    toggleTitleAndMenu() {\r\n      if (this.menuVisible) {\r\n        this.setSettingVisible(-1);\r\n        this.setFontFamilyVisible(false);\r\n      }\r\n      this.setMenuVisible(!this.menuVisible);\r\n    },\r\n\r\n    initFontSize() {\r\n      //读取localStorage中的FontSize\r\n      let fontSize = getFontSize(this.fileName);\r\n      if (fontSize) {\r\n        this.rendition.themes.fontSize(fontSize);\r\n        this.setDefaultFontSize(fontSize);\r\n      } else {\r\n        saveFontSize(this.fileName, this.defaultFontSize);\r\n      }\r\n    },\r\n    initFontFamily() {\r\n      //读取localStorage中的Font\r\n      let font = getFontFamily(this.fileName);\r\n      if (font) {\r\n        this.rendition.themes.font(font);\r\n        this.setDefaultFontFamily(font);\r\n      } else {\r\n        saveFontFamily(this.fileName, this.defaultFontFamily);\r\n      }\r\n    },\r\n    initTheme() {\r\n      //初始化主题\r\n      let defaultTheme = getTheme(this.fileName);\r\n      if (!defaultTheme) {\r\n        defaultTheme = this.themeList[0].name;\r\n        saveTheme(this.fileName, defaultTheme);\r\n      }\r\n      this.setDefaultTheme(defaultTheme);\r\n      this.themeList.forEach(theme => {\r\n        this.rendition.themes.register(theme.name, theme.style);\r\n      });\r\n      this.rendition.themes.select(defaultTheme);\r\n    },\r\n    initGesture() {\r\n      this.rendition.on(\"touchstart\", event => {\r\n        this.touchStartX = event.changedTouches[0].clientX;\r\n        this.touchStartTime = event.timeStamp;\r\n      });\r\n      this.rendition.on(\"touchend\", event => {\r\n        const offsetX = event.changedTouches[0].clientX - this.touchStartX;\r\n        const time = event.timeStamp - this.touchStartTime;\r\n        //根据手势事件实现翻页功能\r\n        if (time < 500 && offsetX > 40) {\r\n          this.prevPage();\r\n        } else if (time < 500 && offsetX < -40) {\r\n          this.nextPage();\r\n        } else {\r\n          this.toggleTitleAndMenu();\r\n        }\r\n        //组织默认事件和冒泡\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      });\r\n    },\r\n    initRendition() {\r\n      //生成Rendition对象\r\n      this.rendition = this.book.renderTo(\"read\", {\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n        method: \"default\"\r\n      });\r\n      //通过Rendition对象的display方法渲染电子书\r\n      const location = getLocation(this.fileName);\r\n      this.display(location, () => {\r\n        this.initFontSize();\r\n        this.initFontFamily();\r\n        this.initTheme();\r\n        this.initGlobalStyle();\r\n      });\r\n      this.rendition.hooks.content.register(contents => {\r\n        Promise.all([\r\n          contents.addStylesheet(\r\n            `${process.env.VUE_APP_RES_URL}/fonts/cabin.css`\r\n          ),\r\n          contents.addStylesheet(\r\n            `${process.env.VUE_APP_RES_URL}/fonts/montserrat.css`\r\n          ),\r\n          contents.addStylesheet(\r\n            `${process.env.VUE_APP_RES_URL}/fonts/tangerine.css`\r\n          ),\r\n          contents.addStylesheet(\r\n            `${process.env.VUE_APP_RES_URL}/fonts/daysOne.css`\r\n          )\r\n        ]).then(() => {});\r\n      });\r\n    },\r\n    parseBook() {\r\n      //解析电子书的封面\r\n      this.book.loaded.cover.then(cover => {\r\n        this.book.archive.createUrl(cover).then(url => {\r\n          this.setCover(url);\r\n        });\r\n      });\r\n      this.book.loaded.metadata.then(metadata => {\r\n        this.setMetadata(metadata);\r\n      });\r\n      this.book.loaded.navigation.then(nav => {\r\n        //console.log(nav)\r\n        //获取电子书的目录\r\n        const navItem = (function flatten(arr) {\r\n          return [].concat(...arr.map(v => [v, ...flatten(v.subitems)]));\r\n        })(nav.toc);\r\n        //将树状目录结构转化为一维数组\r\n        function find(item, v = 0) {\r\n          const parent = navItem.filter(it => it.id === item.parent)[0];\r\n          return !item.parent ? v : parent ? find(parent, ++v) : v;\r\n        }\r\n\r\n        navItem.forEach(item => {\r\n          item.level = find(item);\r\n          item.total = 0;\r\n          item.pagelist = [];\r\n          if (item.href.match(/^(.*)\\.html$/)) {\r\n            item.idhref = item.href.match(/^(.*)\\.html$/)[1];\r\n          } else if (item.href.match(/^(.*)\\.xhtml$/)) {\r\n            item.idhref = item.href.match(/^(.*)\\.xhtml$/)[1];\r\n          }\r\n        });\r\n        this.setNavigation(navItem);\r\n      });\r\n    },\r\n    initEpub(url) {\r\n      //const url =process.env.VUE_APP_RES_URL + \"/epub/\" + this.fileName + \".epub\";\r\n      //电子书的解析和渲染\r\n      //生成Ebook对象\r\n      this.book = new Epub(url);\r\n      this.setCurrentBook(this.book);\r\n      this.initRendition();\r\n      this.initGesture();\r\n      this.parseBook();\r\n      this.book.ready\r\n        .then(() => {\r\n          //分页\r\n          return this.book.locations.generate(\r\n            750 * (window.innerWidth / 375) * (getFontSize(this.fileName) / 16)\r\n          );\r\n        })\r\n        .then(locations => {\r\n          //console.log(locations);\r\n          this.setBookAvailable(true);\r\n          this.refreshLocation();\r\n        });\r\n    }\r\n  },\r\n  mounted() {\r\n    const books = this.$route.params.fileName.split(\"|\");\r\n    const fileName = books[1];\r\n    //读取离线缓存\r\n    getLocalForage(fileName, (err, blob) => {\r\n      if (!err && blob) {\r\n        //电子书有离线缓存\r\n        //console.log(\"找到离线资源\");\r\n        this.setfileName(books.join(\"/\")).then(() => {\r\n          this.initEpub(blob);\r\n        });\r\n      } else {\r\n        //获取在线静态资源的路径\r\n        this.setfileName(books.join(\"/\")).then(() => {\r\n          const url = process.env.VUE_APP_EPUB_URL + this.fileName + \".epub\";\r\n          this.initEpub(url);\r\n        });\r\n      }\r\n    });\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\r\n@import \"../../assets/styles/global\";\r\n\r\n.ebook-reader {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  .ebook-reader-mask {\r\n    position: absolute;\r\n    z-index: 100;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n}\r\n</style>\r\n"]}]}