{"remainingRequest":"E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\src\\views\\store\\StoreList.vue?vue&type=style&index=0&id=33dd3da7&lang=scss&rel=stylesheet%2Fscss&scoped=true&","dependencies":[{"path":"E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\src\\views\\store\\StoreList.vue","mtime":1588676684269},{"path":"E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KQGltcG9ydCAiLi4vLi4vYXNzZXRzL3N0eWxlcy9nbG9iYWwiOw0KDQouYm9vay1saXN0LXdyYXBwZXIgew0KICB3aWR0aDogMTAwJTsNCiAgaGVpZ2h0OiAxMDAlOw0KICBiYWNrZ3JvdW5kOiB3aGl0ZTsNCn0NCg=="},{"version":3,"sources":["StoreList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuHA;;AAEA;AACA;AACA;AACA;AACA","file":"StoreList.vue","sourceRoot":"src/views/store","sourcesContent":["<!-- 书城列表组件 -->\r\n<template>\r\n  <div class=\"book-list-wrapper\">\r\n    <detail-title\r\n      :title=\"title\"\r\n      :showShelf=\"true\"\r\n      @back=\"back\"\r\n      ref=\"title\"\r\n    ></detail-title>\r\n    <scroll\r\n      class=\"book-list-scroll-wrapper\"\r\n      :top=\"42\"\r\n      @onScroll=\"onScroll\"\r\n      ref=\"scroll\"\r\n    >\r\n      <featured\r\n        :data=\"value\"\r\n        :titleText=\"titleText ? titleText : getCategoryText(key)\"\r\n        :btnText=\"''\"\r\n        v-for=\"(value, key, index) in list\"\r\n        :key=\"index\"\r\n      ></featured>\r\n    </scroll>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport DetailTitle from \"../../components/detail/DetailTitle\";\r\nimport Scroll from \"../../components/common/Scroll\";\r\nimport Featured from \"../../components/home/Featured\";\r\nimport { realPx } from \"../../utils/utils\";\r\nimport { list } from \"../../api/store\";\r\nimport { categoryList, categoryText } from \"../../utils/store\";\r\n\r\nexport default {\r\n  components: {\r\n    DetailTitle,\r\n    Scroll,\r\n    Featured\r\n  },\r\n  computed: {\r\n    // 动态生成标题数据\r\n    title() {\r\n      if (this.list) {\r\n        return (\r\n          this.total && this.$t(\"home.allBook\").replace(\"$1\", this.totalNumber)\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n    // 获取当前列表中电子书总数\r\n    totalNumber() {\r\n      let num = 0;\r\n      Object.keys(this.list).forEach(key => {\r\n        num += this.list[key].length;\r\n      });\r\n      return num;\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      list: null,\r\n      total: null\r\n    };\r\n  },\r\n  methods: {\r\n    // 获取分类文本\r\n    getCategoryText(key) {\r\n      return `${categoryText(categoryList[key], this)}(${\r\n        this.list[key].length\r\n      })`;\r\n    },\r\n    back() {\r\n      this.$router.go(-1);\r\n    },\r\n    // 标题阴影的隐藏状态\r\n    onScroll(offsetY) {\r\n      if (offsetY > realPx(42)) {\r\n        this.$refs.title.showShadow();\r\n      } else {\r\n        this.$refs.title.hideShadow();\r\n      }\r\n    },\r\n    // 通过API获取分类列表\r\n    getList() {\r\n      list().then(response => {\r\n        this.list = response.data.data;\r\n        this.total = response.data.total;\r\n        const category = this.$route.query.category;\r\n        const keyword = this.$route.query.keyword;\r\n        if (category) {\r\n          // 如果用户传入了分类数据，则从结果中搜索相应的分类数据并进行展示\r\n          const key = Object.keys(this.list).filter(\r\n            item => item === category\r\n          )[0];\r\n          const data = this.list[key];\r\n          this.list = {};\r\n          this.list[key] = data;\r\n        } else if (keyword) {\r\n          // 如果用户输入了关键字，则通过书名进行关键字匹配（搜索算法）\r\n          Object.keys(this.list).filter(key => {\r\n            this.list[key] = this.list[key].filter(\r\n              book => book.fileName.indexOf(keyword) >= 0\r\n            );\r\n            return this.list[key].length > 0;\r\n          });\r\n        }\r\n      });\r\n    }\r\n  },\r\n  created() {\r\n    this.getList();\r\n    this.titleText = this.$route.query.categoryText;\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\r\n@import \"../../assets/styles/global\";\r\n\r\n.book-list-wrapper {\r\n  width: 100%;\r\n  height: 100%;\r\n  background: white;\r\n}\r\n</style>\r\n"]}]}