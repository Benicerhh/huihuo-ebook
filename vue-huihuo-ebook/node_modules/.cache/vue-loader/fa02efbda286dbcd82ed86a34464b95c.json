{"remainingRequest":"E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\src\\views\\store\\StoreCategory.vue?vue&type=style&index=0&id=64f3f987&lang=scss&rel=stylesheet%2Fscss&scoped=true&","dependencies":[{"path":"E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\src\\views\\store\\StoreCategory.vue","mtime":1588733537597},{"path":"E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\JodPreparation\\Practice\\项目\\huihuo-ebook\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICcuLi8uLi9hc3NldHMvc3R5bGVzL2dsb2JhbCc7Cgouc3RvcmUtc2hlbGYgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB6LWluZGV4OiAxMDA7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwogIGJhY2tncm91bmQ6IHdoaXRlOwogIC5zdG9yZS1zaGVsZi1zY3JvbGwtd3JhcHBlciB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICB0b3A6IDA7CiAgICBsZWZ0OiAwOwogICAgei1pbmRleDogMTAxOwogIH0KICAuc3RvcmUtc2hlbGYtZW1wdHktdmlldyB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICB0b3A6IDA7CiAgICBsZWZ0OiAwOwogICAgd2lkdGg6IDEwMCU7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICBmb250LXNpemU6IHB4MnJlbSgxNCk7CiAgICBjb2xvcjogIzMzMzsKICAgIEBpbmNsdWRlIGNlbnRlcjsKICB9Cn0K"},{"version":3,"sources":["StoreCategory.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StoreCategory.vue","sourceRoot":"src/views/store","sourcesContent":["<!-- 书架分类列表组件 -->\r\n<template>\r\n  <div class=\"store-shelf\">\r\n    <!-- 标题 -->\r\n    <shelf-title :title=\"shelfCategory.title\"></shelf-title>\r\n    <scroll\r\n      class=\"store-shelf-scroll-wrapper\"\r\n      :top=\"0\"\r\n      :bottom=\"scrollBottom\"\r\n      @onScroll=\"onScroll\"\r\n      ref=\"scroll\"\r\n      v-if=\"ifShowList\"\r\n    >\r\n      <!-- 分类列表 -->\r\n      <shelf-list :top=\"42\" :data=\"shelfCategory.itemList\"></shelf-list>\r\n    </scroll>\r\n    <!-- 分类列表数据为空时展示内容 -->\r\n    <div class=\"store-shelf-empty-view\" v-else>{{$t('shelf.groupNone')}}</div>\r\n    <!-- 底部菜单组件 -->\r\n    <shelf-footer></shelf-footer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import ShelfTitle from '../../components/shelf/ShelfTitle'\r\n  import { storeShelfMixin } from '../../utils/mixin'\r\n  import Scroll from '../../components/common/Scroll'\r\n  import ShelfList from '../../components/shelf/ShelfList'\r\n  import ShelfFooter from '../../components/shelf/ShelfFooter'\r\n\r\n  export default {\r\n    mixins: [storeShelfMixin],\r\n    components: {\r\n      Scroll,\r\n      ShelfTitle,\r\n      ShelfList,\r\n      ShelfFooter\r\n    },\r\n    watch: {\r\n      // 监听是否为编辑模式\r\n      isEditMode(isEditMode) {\r\n        // 如果是编辑模式，滚动条需要距底部48像素（需要换算成实际px，组件负责运算）\r\n        this.scrollBottom = isEditMode ? 48 : 0\r\n        this.$nextTick(() => {\r\n          // 刷新滚动条，使得设置生效\r\n          this.$refs.scroll.refresh()\r\n        })\r\n      }\r\n    },\r\n    computed: {\r\n      ifShowList() {\r\n        // 分类列表展示的条件\r\n        return (\r\n          this.shelfCategory.itemList && this.shelfCategory.itemList.length > 0\r\n        )\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        scrollBottom: 0\r\n      }\r\n    },\r\n    methods: {\r\n      // 列表滚动监听事件\r\n      onScroll(offsetY) {\r\n        // 当列表发生滚动时，设置vuex中的offsetY\r\n        // offsetY的变更会触发ShelfTitle组件的watch生效\r\n        this.setOffsetY(offsetY)\r\n      }\r\n    },\r\n    mounted() {\r\n      // 获取分类列表数据\r\n      this.getCategoryList(this.$route.query.title)\r\n      // 标记currentType为2，对于不同的currentType，ShelfTitle将呈现不同状态\r\n      this.setCurrentType(2)\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\r\n  @import '../../assets/styles/global';\r\n\r\n  .store-shelf {\r\n    position: relative;\r\n    z-index: 100;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: white;\r\n    .store-shelf-scroll-wrapper {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      z-index: 101;\r\n    }\r\n    .store-shelf-empty-view {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      font-size: px2rem(14);\r\n      color: #333;\r\n      @include center;\r\n    }\r\n  }\r\n</style>"]}]}